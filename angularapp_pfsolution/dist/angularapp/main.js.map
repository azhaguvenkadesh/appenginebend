{"version":3,"sources":["./src/app/service/appointment.service.ts","./src/environments/environment.ts","./src/app/appointment-list/appointment-list.component.ts","./src/app/appointment-list/appointment-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/appointment-form/appointment-form.component.ts","./src/app/appointment-form/appointment-form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Appointment } from '../model/appointment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  private apiUrl = 'https://united-zenith-431805-h9.uc.r.appspot.com';\n\n  constructor(private http: HttpClient) { }\n\n  getAppointments(): Observable<Appointment[]> {\n    return this.http.get<Appointment[]>(`${this.apiUrl}/api/appointments`);\n  }\n\n  getAppointment(id: number): Observable<Appointment> {\n    return this.http.get<Appointment>(`${this.apiUrl}/api/appointments/${id}`);\n  }\n\n  createAppointment(appointment: Appointment): Observable<Appointment> {\n    return this.http.post<Appointment>(`${this.apiUrl}/api/appointments`, appointment);\n  }\n\n  updateAppointment(id: number, appointment: Appointment): Observable<Appointment> {\n    return this.http.put<Appointment>(`${this.apiUrl}/api/appointments/${id}`, appointment);\n  }\n\n  deleteAppointment(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/api/appointments/${id}`);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AppointmentService } from '../service/appointment.service';\nimport { Appointment } from '../model/appointment';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.css'],\n  providers: [DatePipe] // Provide DatePipe\n})\nexport class AppointmentListComponent implements OnInit {\n  appointments: Appointment[] = [];\n  successMessage: string = '';\n\n  constructor(\n    private appointmentService: AppointmentService,\n    private datePipe: DatePipe // Inject DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.getAppointments();\n  }\n\n  getAppointments(): void {\n    this.appointmentService.getAppointments().subscribe((data) => {\n      this.appointments = data.map(appointment => ({\n        ...appointment,\n        appointmentDate: this.datePipe.transform(appointment.appointmentDate, 'dd-MM-yyyy') // Format date\n      }));\n    });\n  }\n\n  deleteAppointment(id: number): void {\n    this.appointmentService.deleteAppointment(id).subscribe(() => {\n      this.successMessage = 'Appointment successfully deleted';\n      this.getAppointments();\n      setTimeout(() => this.successMessage = '', 2000); // Clear message after 3 seconds\n    });\n  }\n}","<h2>Appointment List</h2>\n\n<table class=\"appointment-table\">\n  <thead>\n    <tr>\n      <th>Patient Name</th>\n      <th>Doctor Name</th>\n      <th>Specialization</th>\n      <th>Appointment Date</th>\n      <th>Time Slot</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let appointment of appointments\">\n      <td>{{ appointment.patientName }}</td>\n      <td>{{ appointment.doctorName }}</td>\n      <td>{{ appointment.specialization }}</td>\n      <td>{{ appointment.appointmentDate }}</td>\n      <td>{{ appointment.timeSlot }}</td>\n      <td>\n        <a [routerLink]=\"['/appointments/edit', appointment.id]\" class=\"edit-button\">Edit</a>\n        <button (click)=\"deleteAppointment(appointment.id)\" class=\"delete-button\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n  <!-- Success message section -->\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</table>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<nav>\n  <ul>\n    <li><a routerLink=\"/appointments\" routerLinkActive=\"active\">Appointments</a></li>\n    <li><a routerLink=\"/appointments/add\" routerLinkActive=\"active\">Add Appointment</a></li>\n  </ul>\n</nav>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppointmentFormComponent } from './appointment-form/appointment-form.component';\nimport { AppointmentListComponent } from './appointment-list/appointment-list.component';\nimport { AppointmentService } from './service/appointment.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppointmentFormComponent,\n    AppointmentListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [AppointmentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppointmentService } from '../service/appointment.service';\nimport { Appointment } from '../model/appointment';\n\n@Component({\n  selector: 'app-appointment-form',\n  templateUrl: './appointment-form.component.html',\n  styleUrls: ['./appointment-form.component.css']\n})\nexport class AppointmentFormComponent implements OnInit {\n  loadAppointment(arg0: number) {\n    throw new Error('Method not implemented.');\n  }\n  appointmentForm: FormGroup;\n  isEditMode = false;\n  successMessage: string = '';\n  minDate: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private appointmentService: AppointmentService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.appointmentForm = this.formBuilder.group({\n      id: [null],\n      patientName: ['', Validators.required],\n      doctorName: ['', Validators.required],\n      specialization: ['', Validators.required],\n      appointmentDate: ['', Validators.required],\n      timeSlot: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    const today = new Date();\n    this.minDate = today.toISOString().split('T')[0];\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.isEditMode = true;\n      this.loadAppointmentDetails(+id);\n    }\n  }\n\n  private loadAppointmentDetails(id: number): void {\n    this.appointmentService.getAppointment(id).subscribe(\n      (appointment: Appointment) => this.appointmentForm.patchValue(appointment),\n      error => console.error('Error fetching appointment', error)\n    );\n  }\n\n  onSubmit(): void {\n    if (this.appointmentForm.invalid) return;\n\n    if (this.isEditMode) {\n      this.updateAppointment();\n    } else {\n      this.createAppointment();\n    }\n  }\n\n  private updateAppointment(): void {\n    const appointmentId = this.appointmentForm.value.id;\n    this.appointmentService.updateAppointment(appointmentId, this.appointmentForm.value).subscribe(\n      response => {\n        this.successMessage = 'Appointment successfully updated';\n        this.resetSuccessMessage();\n        setTimeout(() => {\n          this.router.navigate(['/appointments']);\n        }, 2000);\n      },\n      error => console.error('Error updating appointment', error)\n    );\n  }\n  \n  private createAppointment(): void {\n    this.appointmentService.createAppointment(this.appointmentForm.value).subscribe(\n      response => {\n        this.successMessage = 'Appointment successfully created';\n        this.resetSuccessMessage();\n        setTimeout(() => {\n          this.router.navigate(['/appointments']);\n        }, 2000);\n      },\n      error => console.error('Error creating appointment', error)\n    );\n  }\n\n  private resetSuccessMessage(): void {\n    setTimeout(() => {\n      this.successMessage = '';\n    }, 2000); // Hide the message after 2 seconds\n  }\n}","<h2>{{ isEditMode ? 'Edit Appointment' : 'Add New Appointment' }}</h2>\n<form [formGroup]=\"appointmentForm\" (ngSubmit)=\"onSubmit()\" class=\"appointment-form\">\n  <div class=\"form-group\">\n    <label for=\"patientName\">Patient Name:</label>\n    <input id=\"patientName\" formControlName=\"patientName\" type=\"text\">\n    <div *ngIf=\"appointmentForm.get('patientName')?.invalid && (appointmentForm.get('patientName')?.dirty || appointmentForm.get('patientName')?.touched)\" class=\"error\">\n      <div *ngIf=\"appointmentForm.get('patientName')?.errors?.required\">Patient Name is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"doctorName\">Doctor Name:</label>\n    <input id=\"doctorName\" formControlName=\"doctorName\" type=\"text\">\n    <div *ngIf=\"appointmentForm.get('doctorName')?.invalid && (appointmentForm.get('doctorName')?.dirty || appointmentForm.get('doctorName')?.touched)\" class=\"error\">\n      <div *ngIf=\"appointmentForm.get('doctorName')?.errors?.required\">Doctor Name is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"specialization\">Specialization:</label>\n    <input id=\"specialization\" formControlName=\"specialization\" type=\"text\">\n    <div *ngIf=\"appointmentForm.get('specialization')?.invalid && (appointmentForm.get('specialization')?.dirty || appointmentForm.get('specialization')?.touched)\" class=\"error\">\n      <div *ngIf=\"appointmentForm.get('specialization')?.errors?.required\">Specialization is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"appointmentDate\">Appointment Date:</label>\n    <input id=\"appointmentDate\" formControlName=\"appointmentDate\" type=\"date\" [min]=\"minDate\">\n    <div *ngIf=\"appointmentForm.get('appointmentDate')?.invalid && (appointmentForm.get('appointmentDate')?.dirty || appointmentForm.get('appointmentDate')?.touched)\" class=\"error\">\n      <div *ngIf=\"appointmentForm.get('appointmentDate')?.errors?.required\">Appointment Date is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"timeSlot\">Time Slot:</label>\n    <input id=\"timeSlot\" formControlName=\"timeSlot\" type=\"text\">\n    <div *ngIf=\"appointmentForm.get('timeSlot')?.invalid && (appointmentForm.get('timeSlot')?.dirty || appointmentForm.get('timeSlot')?.touched)\" class=\"error\">\n      <div *ngIf=\"appointmentForm.get('timeSlot')?.errors?.required\">Time Slot is required.</div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"submit-button\" [disabled]=\"appointmentForm.invalid\">Submit</button>\n\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppointmentListComponent } from './appointment-list/appointment-list.component';\nimport { AppointmentFormComponent } from './appointment-form/appointment-form.component';\n\nconst routes: Routes = [\n  { path: 'appointments', component: AppointmentListComponent },\n  { path: 'appointments/add', component: AppointmentFormComponent }, // For both add and edit\n  { path: 'appointments/edit/:id', component: AppointmentFormComponent }, // For edit with id\n  { path: '', redirectTo: '/appointments', pathMatch: 'full' },\n  { path: '**', redirectTo: '/appointments' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}